FROM opago/odoo:base
MAINTAINER Odoo S.A. <info@odoo.com>

# Use /bin/bash as the shell
SHELL ["/bin/bash", "-c"]

# Install system dependencies
RUN apt-get update && apt-get install -y \
    postgresql-client \
    libpq-dev \
    python3-venv \
    && rm -rf /var/lib/apt/lists/*

# Set up a virtual environment
ENV VIRTUAL_ENV=/opt/venv
RUN python3 -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# Upgrade pip and install wheel
RUN pip install --upgrade pip wheel

# Copy only necessary files and directories
COPY ./odoo /opt/odoo/odoo
COPY ./addons /opt/odoo/addons
COPY ./setup.py /opt/odoo/
COPY ./requirements.txt /opt/odoo/
COPY ./odoo-bin /opt/odoo/

# Install dependencies
WORKDIR /opt/odoo
RUN pip install -r requirements.txt

# Install Odoo
RUN pip install -e .

# Download entrypoint script, Odoo configuration file, and wait-for-psql.py
RUN curl -o /entrypoint.sh -sSL https://raw.githubusercontent.com/odoo/docker/master/17.0/entrypoint.sh && \
    curl -o /etc/odoo/odoo.conf -sSL https://raw.githubusercontent.com/odoo/docker/master/17.0/odoo.conf && \
    curl -o /usr/local/bin/wait-for-psql.py -sSL https://raw.githubusercontent.com/odoo/docker/master/17.0/wait-for-psql.py

# Set permissions and Mount /var/lib/odoo to allow restoring filestore and /mnt/extra-addons for users addons
RUN chown odoo /etc/odoo/odoo.conf && \
    mkdir -p /mnt/extra-addons && \
    chown -R odoo /mnt/extra-addons
VOLUME ["/var/lib/odoo", "/mnt/extra-addons"]

# Expose Odoo services
EXPOSE 8069 8071 8072

# Set the default config file
ENV ODOO_RC=/etc/odoo/odoo.conf

# Set default user when running the container
USER odoo

ENTRYPOINT ["/entrypoint.sh"]
CMD ["odoo"]